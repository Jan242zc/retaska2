{block content}
	<div class="container">
		<div class="everything-wrapper">
			<h1 class="middle">Nákupní košík</h1>
			<div class="row">
				<div class="left">
					<a class="link-with-arrow" n:href="Product:default">< Zpět ke zboží</a>
				</div>
				<div class="right">
					<a class="link-with-arrow" href="#">Dokončit objednávku ></a>
				</div>
			</div>
			{form editBasketForm}
				<table>
					<thead>
						<tr>
							<td class="product-column">
								Produkt
							</td>
							<td class="price-column">
								Cena
							</td>
							<td class="altogether-column">
								Celková cena
							</td>
							<td class="quantity-column">
								Množství
							</td>
						</tr>
					</thead>
					<tbody>
						{foreach $basketItems as $item}
							<tr>
								<td>
									{$item->getProduct()->getName()}			
								</td>
								<td>
									<span class="product-price">{$item->getProduct()->getPrice()}</span> Kč / ks
								</td>
								<td>
									{$item->getPrice()} Kč
								</td>
								<td hidden>
									<input type=text name="id[]" value={$item->getProduct()->getId()} hidden />
									<input type=checkbox value={$item->getProduct()->getId()} name="toBeDeleted[]"  />
								</td>
								<td>
									<input type=text name="quantity[]" class="quantity" value={$item->getQuantity()} /> 
									<button class="button-basket button-basket-minus">-</button>
									<button class="button-basket button-basket-plus">+</button>
									<button class="button-basket button-basket-delete">Odstranit</button>
								</td>
							</tr>
						{/foreach}
					</tbody>
					<tfoot>
						<tr>
							<td colspan="3">Provedené změny musejí být uloženy stisknutím tlačítka.</td>
							<td>{input submit}</td>
						</tr>
					</tfoot>
				</table>
			{/form}
			<div class="row">
				<div class="left">
					<a class="link-with-arrow" n:href="Product:default">< Zpět ke zboží</a>
				</div>
				<div class="right">
					<a class="link-with-arrow" href="#">Dokončit objednávku ></a>
				</div>
			</div>
		</div>
	</div>
	<script>
		document.addEventListener("DOMContentLoaded", function() {
			setDeleteButtonsEventListener();
			setMinusButtonEventListener();
			setPlusButtonEventListener();
			setQuantityFieldEventListener()
		});
		
		/* DELETING */
		var inputAndAllButtons = '';
		
		function setDeleteButtonsEventListener(){
			var buttons = document.getElementsByClassName('button-basket-delete');
			for(i = 0; i < buttons.length; i++){
				buttons[i].addEventListener("click", setRowToBeDeletedChangeItsClassAndSetTakeBackToGetPrepared);
			}
		}
		
		function setRowToBeDeletedChangeItsClassAndSetTakeBackToGetPrepared(e){
			e.preventDefault();
			this.parentElement.parentElement.getElementsByTagName('input')[1].checked = true; //hidden checkbox
			this.parentElement.parentElement.classList.add('to-be-deleted'); //tr (row)
			var lastTdInRow = this.parentElement; //td with input and button
			inputAndAllButtons = lastTdInRow.innerHTML;
			lastTdInRow.innerHTML = 'Označeno k odstranění. <span class="take-back">Vzít zpět.</span>';
			var takeBackSpan = lastTdInRow.lastElementChild;
			setTakeBackEventListener(takeBackSpan);
		}
		
		function setTakeBackEventListener(element) {
			//nastavení naslouchače + samotná fce pro vrácení stavu - odškrtnutí, odstranění to be deleted tříd
			element.addEventListener("click", takeDeletionBack);
		}
		
		function takeDeletionBack(e){
			this.parentElement.parentElement.classList.remove('to-be-deleted'); //tr (row)
			this.parentElement.innerHTML = inputAndAllButtons;
			setDeleteButtonsEventListener();
		}
		
		/* QUANTITY */
		function setMinusButtonEventListener(){
			var buttons = document.getElementsByClassName('button-basket button-basket-minus');
			for(var i = 0; i < buttons.length; i++){
				buttons[i].addEventListener("click", minusButtonClicked);
			}
		}
		
		function setPlusButtonEventListener(){
			var buttons = document.getElementsByClassName('button-basket button-basket-plus');
			for(var i = 0; i < buttons.length; i++){
				buttons[i].addEventListener("click", plusButtonClicked);
			}
		}
		
		function setQuantityFieldEventListener(){
			var fields = document.getElementsByClassName('quantity');
			for(var i = 0; i < fields.length; i++){
				fields[i].addEventListener("keyup", quantityFieldValueChanged);
			}
		}
		
		function minusButtonClicked(e){ 
			e.preventDefault();
			decreaseQuantity(this);
		};
		
		function plusButtonClicked(e){
			e.preventDefault();
			increaseQuantity(this);
		}
		
		function quantityFieldValueChanged(e){
			updateProductTotalPrice(this, this.value);
		}
		
		function decreaseQuantity(element){
			var quantityField = getQuantityField(element);
			var quantity = parseInt(quantityField.value);
			quantity = isNaN(quantity) ? 0 : quantity <= 0 ? 0 : --quantity;
			quantityField.value = quantity;
			updateProductTotalPrice(element, quantity);
		}
		
		function increaseQuantity(element){
			var quantityField = getQuantityField(element);
			var quantity = parseInt(quantityField.value);
			quantity = isNaN(quantity) ? 0 : quantity < 0 ? 1 : ++quantity;
			quantityField.value = quantity;
			updateProductTotalPrice(element, quantity);
		}
		
		function updateProductTotalPrice(element, quantity){
			var productTotalPriceField = getProductTotalPriceField(element);
			productTotalPriceField.innerHTML = Math.ceil(quantity * parseFloat(getProductPrice(element).innerHTML)) + ' Kč';
		}
		
		function getQuantityField(element){
			return element.parentElement.parentElement.getElementsByTagName('input')[2];
		}
		
		function getProductTotalPriceField(element){
			return element.parentElement.parentElement.children[2];
		}
		
		function getProductPrice(element){
			return element.parentElement.parentElement.getElementsByClassName('product-price')[0];
		}
	</script>
